<#@ template language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="G:\DevEnvs\Unity\6000.0.9f1\Editor\Data\Managed\UnityEngine\UnityEngine.CoreModule.dll" #>
<#@ import namespace="UnityEngine" #>
using Unity.Entities;
using UnityEngine;

namespace Enums
{
    public struct ShaderProperties : IComponentData
    {
<#
    var properties = new[]
    {
        "GoalAlpha",
        "WireColor",
    };
    foreach (var property in properties)
    {
#>
        public int <#= property #>;
<#
    }
#>
    }

    [WorldSystemFilter(WorldSystemFilterFlags.BakingSystem)]
    public partial struct ShaderPropertiesBakingSystem : ISystem
    {
        public void OnUpdate(ref SystemState state)
        {
            if (SystemAPI.HasSingleton<ShaderProperties>()) return;
            state.EntityManager.CreateSingleton(
                new ShaderProperties
                {
<#
    foreach (var property in properties)
    {
#>
                    <#= property #> = Shader.PropertyToID("_<#= property #>"),
<#
    }
#>
                }
            );
        }
    }
}